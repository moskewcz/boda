# NOTE: see also the file obj_list (in the same directory as this file)

# NOTE_DETAILS: the build system for this project consists of this makefile, the python script
# pysrc/prebuild.py, and the file obj_list read by the python scripts. running make on this makefile is the
# correct top-level build command. however, note that configuring the project may require edits to this
# makefile, the obj_list file, and/or the python build scripts.

$(info py_prebuild_rm_okay: $(shell rm -f prebuild.okay )) # remove marker file
# run python build code: # reads obj_list; creates an empty prebuild.okay file on success. also generates code and bulk of makefile.
# FIXME: make seems to somtimes like to run prebuild.py multiple times -- which is not great, but okay.
OBJ_LIST_FN := obj_list
$(info py_prebuild_hook:  $(shell python2 ../pysrc/prebuild.py --obj-list-fn=${OBJ_LIST_FN} )) 
ifeq ($(shell test -f prebuild.okay ; echo $$? ),1)
$(error "prebuild.okay file does not exist. assuming prebuild.py failed, aborting make")
endif

TARGET := ../lib/boda
all : $(TARGET) 
include dependencies.make # generated by prebuild.py
VPATH := ../src ./gen ../src/ext # note: files in ./gen are generated by prebuild.py
OBJS := $(shell cat gen_objs) # note: gen_objs file is generated by prebuild.py from (filtered) [objs] stanza of obj_list
.SUFFIXES:
%.o : %.cc
	$(CPP) $(CPPFLAGS) -MMD -c $<
%.d : %.cc
	rm -f $(@:.d=.o)
%.o : %.cpp
	$(CPP) $(CPPFLAGS) -MMD -c $<
%.d : %.cpp
	rm -f $(@:.d=.o)
DEPENDENCIES = $(OBJS:.o=.d)
$(TARGET): $(OBJS) $(OBJ_LIST_FN)
	$(CPP) $(CPPFLAGS) -o $(TARGET) $(OBJS) $(LDFLAGS)
.PHONY : clean
# FIXME: yeah, those caffe gen'd files don't belong manually inlined below. but the 'natural' approach of putting them
# in gen doesn't work due to makefile insanity, and it's probably better to clean them manually then pretend they don't
# exist.
clean: 
	-rm -f $(TARGET) $(OBJS) $(DEPENDENCIES) gen/* caffe.pb.h caffe.pb.cc  gen_objs dependencies.make make_make_ignore_missing_headers_in_d_files.make prebuild.okay boda
	-rmdir gen
include $(DEPENDENCIES) # generated by compiler via -MMD option
include make_make_ignore_missing_headers_in_d_files.make # generated by prebuild.py
